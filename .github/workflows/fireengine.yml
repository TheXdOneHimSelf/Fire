name: Download and Commit Latest FireEngine

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 03:00 UTC

jobs:
  download_and_commit_fireengine:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Remove old fireengine files
        run: |
          rm -f engines/fireengine
          rm -f engines/fireengine*

      - name: Get latest workflow run ID
        id: get_run_id
        run: |
          RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/TheXdOneHimSelf/Stockfish/actions/workflows/compilation.yml/runs?status=success&per_page=1" \
            | jq -r '.workflow_runs[0].id')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download the stockfish artifact
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: 'TheXdOneHimSelf',
              repo: 'Stockfish',
              run_id: process.env.RUN_ID
            });
            
            // Find the stockfish-ubuntu-x86-64-bmi2 artifact
            const artifact = artifacts.data.artifacts.find(a => a.name === 'stockfish-ubuntu-x86-64-bmi2');
            
            if (!artifact) {
              throw new Error('stockfish-ubuntu-x86-64-bmi2 artifact not found');
            }
            
            console.log(`Downloading artifact: ${artifact.name}`);
            
            const download = await github.rest.actions.downloadArtifact({
              owner: 'TheXdOneHimSelf',
              repo: 'Stockfish',
              artifact_id: artifact.id,
              archive_format: 'zip'
            });
            
            const fs = require('fs');
            fs.writeFileSync('/tmp/artifact.zip', Buffer.from(download.data));
            return artifact.name;

      - name: Extract and rename binary
        run: |
          # Extract the downloaded artifact
          unzip /tmp/artifact.zip -d /tmp
          
          # Extract the tar file (contains stockfish-ubuntu-x86-64-bmi2 at root level)
          tar -xf /tmp/stockfish-ubuntu-x86-64-bmi2.tar -C /tmp
          
          # Create engines directory and move/rename the binary
          mkdir -p engines
          mv /tmp/stockfish-ubuntu-x86-64-bmi2 engines/fireengine
          chmod +x engines/fireengine
          
          echo "Binary successfully moved to engines/fireengine"

      - name: Clean up temporary files
        run: |
          rm -rf /tmp/artifact.zip
          rm -rf /tmp/stockfish-ubuntu-x86-64-bmi2.tar
          rm -rf /tmp/stockfish-ubuntu-x86-64-bmi2

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add engines/fireengine
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update FireEngine binary from latest compilation"
            git push origin HEAD:main
          fi
